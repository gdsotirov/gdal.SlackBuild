#!/bin/sh
#
# Slackware build script for GDAL
# Copyright (C) 2015-2017 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# 
# $Id: gdal.SlackBuild,v 1.10 2017/05/20 10:01:24 gsotirov Exp $
#

. ../../slack-package.conf

NAME=gdal
VERSION=2.2.0
ARCH=${ARCH:-i586}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}
PKG_DIR=${PKG_DIR:-/tmp}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/$NAME-$VERSION
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-$NAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract source
cd $TMP
tar -xvf $CWD/$NAME-$VERSION.tar.?z* || exit 3
cd $SRC
fix_source

# Apply patch(es) if any
if [ -e $CWD/$NAME-$VERSION.diff ]; then
  patch -b -z .orig -p1 < $CWD/$NAME-$VERSION.diff
fi

# Configure
CFLAGS=$SLKCFLAGS \
CXXFLAGS=$SLKCFLAGS \
./configure --build=$ARCH-slackware-linux \
            --host=$ARCH-slackware-linux \
            --prefix=/usr \
            --includedir=/usr/include/$NAME \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --docdir=/usr/doc/$NAME-$VERSION \
            --enable-shared=yes \
            --enable-static=no \
            --with-sse=yes \
            --with-avx=yes \
            --with-threads=yes \
            --with-libz=/usr/lib \
            --with-liblzma=yes \
            --with-png=/usr/lib \
            --with-libtiff=/usr/lib \
            --with-jpeg=/usr/lib \
            --with-gif=/usr/lib \
            --with-jasper=/usr/lib \
            --with-openjpeg \
            --with-mysql \
            --with-expat=/usr/lib \
            --with-odbc=/usr/lib \
            --with-curl=/usr/bin/curl-config \
            --with-xml2=/usr/lib \
            --with-sqlite3=/usr/lib \
            --with-pcre \
            --with-webp=yes \
            --with-geos=yes \
            --with-qhull=yes \
            --with-poppler \
            --with-perl \
            --with-python=yes || exit 4
#           --with-php  # out of date: won't build with error: 'tsrm_ls' was not declared in this scope
#           --with-ruby # out of date: won't build

# Build & install
make || exit 5
make DESTDIR=$PKG install || exit 6

# Prepare
( cd $PKG; strip_bin; strip_lib )
DOCFILES="$DOCFILES COMMITERS LICENSE.TXT PROVENANCE.TXT VERSION"
( cd $SRC; create_docs $PKG $NAME-$VERSION )
( cd $PKG/usr/doc/$NAME-$VERSION; mv LICENSE.TXT COPYING )
# Move Perl bindings in the right place
if [ "$ARCH" == "x86_64" ]; then
  cd $PKG/usr
  mv lib/perl5 lib${LIBDIRSUFFIX}/perl5
  rmdir lib
fi

mkdir -p $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required
install -m 644 $CWD/slack-suggests $PKG/install/slack-suggests

mkdir -p $PKG/usr/src/slackbuilds/$NAME-$VERSION
install -m 644 $CWD/slack-desc          $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-desc
install -m 644 $CWD/slack-required      $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-required
install -m 644 $CWD/slack-suggests      $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-suggests
if [ -e $CWD/$NAME-$VERSION.diff ]; then
install -m 644 $CWD/$NAME-$VERSION.diff $PKG/usr/src/slackbuilds/$NAME-$VERSION/$NAME-$VERSION.diff
fi
install -m 644 $CWD/$NAME.SlackBuild    $PKG/usr/src/slackbuilds/$NAME-$VERSION/$NAME.SlackBuild

# Assemble
cd $PKG
PKGNAME=$NAME-$VERSION-$ARCH-$BUILD$MYIN
makepkg -l y -c n $PKG_DIR/$PKGNAME.txz
cd $PKG_DIR
md5sum $PKGNAME.txz > $PKGNAME.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/$PKGNAME.txt

# Clean up (optionally)
if [ "$1" == "--cleanup" ]; then
  rm -r $SRC
  rm -r $PKG
fi

